AssetArc – Engine Refactor Pack
This pack includes:
* A central templates index for E2 (Knowledge & Drafting) with jurisdictions (ZA, BVI, Belize, Mauritius, Seychelles, Cayman) and variables.
* OpenAPI specs (minimal but real) for all 8 engines (E1–E8).
* A Compose overlay that adds engine labels to current P## services without changing how you run the stack.
* Apply steps to phase-in safely.

1) E2 Templates Registry
Create this file at: eng-drafting/templates/templates.json
[
  {
    "id": "invoice.v1",
    "name": "Invoice",
    "type": "invoice",
    "format": "html",
    "engine_owner": "E3",
    "jurisdiction": ["GLOBAL"],
    "source": "P07-payments/assetarc-payments/templates/invoice.html",
    "target": "eng-drafting/templates/invoice.html",
    "vars": ["invoice_number","date","bill_to","line_items","subtotal","vat","total","notes"],
    "version": 1
  },

  { "id": "docgen.company_resolution.za.v1", "name": "Company Board Resolution (ZA)",
    "type": "resolution", "format": "docx", "engine_owner": "E5",
    "jurisdiction": ["ZA"],
    "source": "P10-docgen/assetarc-docgen/templates/company_resolution.docx",
    "target": "eng-drafting/templates/company_resolution.za.docx",
    "vars": ["company_name","reg_number","resolution_title","whereas","resolved","date","directors"],
    "version": 1 },

  { "id": "docgen.trust_deed_addendum.za.v1", "name": "Trust Deed Addendum (ZA)",
    "type": "agreement", "format": "docx", "engine_owner": "E5",
    "jurisdiction": ["ZA"],
    "source": "P10-docgen/assetarc-docgen/templates/trust_deed_addendum.docx",
    "target": "eng-drafting/templates/trust_deed_addendum.za.docx",
    "vars": ["trust_name","master_deed_date","amendments"], "version": 1 },

  { "id": "docgen.invoice.shell.v1", "name": "DocGen Invoice Shell",
    "type": "invoice", "format": "html", "engine_owner": "E3",
    "jurisdiction": ["GLOBAL"],
    "source": "P10-docgen/assetarc-docgen/templates/invoice.html",
    "target": "eng-drafting/templates/invoice.shell.html",
    "vars": ["invoice_number","date","bill_to","items","vat_percent","total"], "version": 1 },

  { "id": "admin.ui.index.v1", "name": "Admin UI Index",
    "type": "ui", "format": "html", "engine_owner": "E1",
    "jurisdiction": ["GLOBAL"],
    "source": "P11-admin/assetarc-admin/static/index.html",
    "target": "eng-drafting/templates/admin.index.html",
    "vars": [], "version": 1 },

  { "id": "analytics.report.v1", "name": "Analytics Report",
    "type": "report", "format": "html", "engine_owner": "E7",
    "jurisdiction": ["GLOBAL"],
    "source": "P12-analytics/assetarc-analytics/templates/analytics_report.html",
    "target": "eng-drafting/templates/analytics_report.html",
    "vars": ["date_range","metrics","charts"], "version": 1 },

  { "id": "fica.client_declaration.za.v1", "name": "FICA Client Declaration (ZA)",
    "type": "form", "format": "docx", "engine_owner": "E4",
    "jurisdiction": ["ZA"],
    "source": "P13-fica/assetarc-fica/templates/client_declaration.docx",
    "target": "eng-drafting/templates/fica_client_declaration.za.docx",
    "vars": ["client_name","id_number","address","declarations"], "version": 1 },
  { "id": "fica.checklist.za.v1", "name": "FICA Checklist (ZA)",
    "type": "checklist", "format": "docx", "engine_owner": "E4",
    "jurisdiction": ["ZA"],
    "source": "P13-fica/assetarc-fica/templates/fica_checklist.docx",
    "target": "eng-drafting/templates/fica_checklist.za.docx",
    "vars": ["items"], "version": 1 },
  { "id": "fica.report.v1", "name": "FICA Report (HTML)",
    "type": "report", "format": "html", "engine_owner": "E4",
    "jurisdiction": ["ZA"],
    "source": "P13-fica/assetarc-fica/templates/report.html",
    "target": "eng-drafting/templates/fica_report.html",
    "vars": ["summary","issues","evidence"], "version": 1 },

  { "id": "docengine.letter.generic.v1", "name": "Letter (Generic)",
    "type": "letter", "format": "docx", "engine_owner": "E2",
    "jurisdiction": ["GLOBAL"],
    "source": "P14-doc-engine/assetarc-doc-engine/templates/letter.docx",
    "target": "eng-drafting/templates/letter.generic.docx",
    "vars": ["to","subject","body","signatory"], "version": 1 },
  { "id": "docengine.report.v1", "name": "Doc Engine Report",
    "type": "report", "format": "html", "engine_owner": "E2",
    "jurisdiction": ["GLOBAL"],
    "source": "P14-doc-engine/assetarc-doc-engine/templates/report.html",
    "target": "eng-drafting/templates/docengine_report.html",
    "vars": ["title","sections"], "version": 1 },

  { "id": "quote.proposal.v1", "name": "Quote (Proposal)",
    "type": "quote", "format": "docx", "engine_owner": "E3",
    "jurisdiction": ["GLOBAL"],
    "source": "P15-quote/assetarc-quote/templates/quote.docx",
    "target": "eng-drafting/templates/quote.docx",
    "vars": ["quote_number","client","items","fx_rate","total"], "version": 1 },
  { "id": "quote.proforma.v1", "name": "Proforma Invoice",
    "type": "invoice", "format": "html", "engine_owner": "E3",
    "jurisdiction": ["GLOBAL"],
    "source": "P15-quote/assetarc-quote/templates/proforma_invoice.html",
    "target": "eng-drafting/templates/proforma_invoice.html",
    "vars": ["invoice_number","items","total"], "version": 1 },

  { "id": "review.summary.v1", "name": "Review Summary",
    "type": "report", "format": "html", "engine_owner": "E4",
    "jurisdiction": ["GLOBAL"],
    "source": "P16-review/assetarc-review/templates/review_summary.html",
    "target": "eng-drafting/templates/review_summary.html",
    "vars": ["items","findings","recommendations"], "version": 1 },

  { "id": "subs.welcome_email.v1", "name": "Subscription Welcome Email",
    "type": "email", "format": "html", "engine_owner": "E3",
    "jurisdiction": ["GLOBAL"],
    "source": "P17-subscriptions/assetarc-subscriptions/templates/welcome_email.html",
    "target": "eng-drafting/templates/subs_welcome_email.html",
    "vars": ["recipient","plan","cta_url"], "version": 1 },

  { "id": "company.board_resolution.za.v1", "name": "Company Board Resolution (ZA)",
    "type": "resolution", "format": "docx", "engine_owner": "E5",
    "jurisdiction": ["ZA"],
    "source": "P18-company/assetarc-company/templates/board_resolution.docx",
    "target": "eng-drafting/templates/board_resolution.za.docx",
    "vars": ["company_name","reg_number","resolved","date"], "version": 1 },
  { "id": "company.share_certificate.za.v1", "name": "Share Certificate (ZA)",
    "type": "certificate", "format": "docx", "engine_owner": "E5",
    "jurisdiction": ["ZA"],
    "source": "P18-company/assetarc-company/templates/share_certificate.docx",
    "target": "eng-drafting/templates/share_certificate.za.docx",
    "vars": ["company_name","holder","shares","class","issue_date"], "version": 1 },
  { "id": "company.incorp_checklist.za.v1", "name": "Incorporation Checklist (ZA)",
    "type": "checklist", "format": "html", "engine_owner": "E5",
    "jurisdiction": ["ZA"],
    "source": "P18-company/assetarc-company/templates/incorporation_checklist.html",
    "target": "eng-drafting/templates/incorporation_checklist.za.html",
    "vars": ["items"], "version": 1 },

  { "id": "trust.letter_of_wishes.za.v1", "name": "Letter of Wishes (ZA)",
    "type": "letter", "format": "docx", "engine_owner": "E5",
    "jurisdiction": ["ZA"],
    "source": "P19-trust/assetarc-trust/templates/letter_of_wishes.docx",
    "target": "eng-drafting/templates/letter_of_wishes.za.docx",
    "vars": ["trust_name","settlor","wishes"], "version": 1 },
  { "id": "trust.deed.za.v1", "name": "Trust Deed (ZA)",
    "type": "agreement", "format": "docx", "engine_owner": "E5",
    "jurisdiction": ["ZA"],
    "source": "P19-trust/assetarc-trust/templates/trust_deed.docx",
    "target": "eng-drafting/templates/trust_deed.za.docx",
    "vars": ["trust_name","trustees","beneficiaries","clauses"], "version": 1 },
  { "id": "trust.trustee_resolution.v1", "name": "Trustee Resolution",
    "type": "resolution", "format": "html", "engine_owner": "E5",
    "jurisdiction": ["ZA"],
    "source": "P19-trust/assetarc-trust/templates/trustee_resolution.html",
    "target": "eng-drafting/templates/trustee_resolution.html",
    "vars": ["trust_name","resolution","date"], "version": 1 },

  { "id": "structure.memo.v1", "name": "Structure Memo",
    "type": "memo", "format": "docx", "engine_owner": "E5",
    "jurisdiction": ["GLOBAL"],
    "source": "P20-structure/assetarc-structure/templates/structure_memo.docx",
    "target": "eng-drafting/templates/structure_memo.docx",
    "vars": ["client","goals","options","recommendation"], "version": 1 },
  { "id": "structure.org_chart.v1", "name": "Org Chart",
    "type": "diagram", "format": "html", "engine_owner": "E5",
    "jurisdiction": ["GLOBAL"],
    "source": "P20-structure/assetarc-structure/templates/org_chart.html",
    "target": "eng-drafting/templates/org_chart.html",
    "vars": ["nodes","edges"], "version": 1 },

  { "id": "linking.share_transfer.za.v1", "name": "Share Transfer Form (ZA)",
    "type": "form", "format": "docx", "engine_owner": "E5",
    "jurisdiction": ["ZA"],
    "source": "P21-linking/assetarc-linking/templates/share_transfer_form.docx",
    "target": "eng-drafting/templates/share_transfer_form.za.docx",
    "vars": ["transferor","transferee","shares","company"], "version": 1 },
  { "id": "linking.minutes_addendum.v1", "name": "Minutes Addendum",
    "type": "minutes", "format": "docx", "engine_owner": "E5",
    "jurisdiction": ["GLOBAL"],
    "source": "P21-linking/assetarc-linking/templates/minutes_addendum.docx",
    "target": "eng-drafting/templates/minutes_addendum.docx",
    "vars": ["meeting_date","agenda","addendum"], "version": 1 },
  { "id": "linking.summary.v1", "name": "Linking Summary",
    "type": "summary", "format": "html", "engine_owner": "E5",
    "jurisdiction": ["GLOBAL"],
    "source": "P21-linking/assetarc-linking/templates/linking_summary.html",
    "target": "eng-drafting/templates/linking_summary.html",
    "vars": ["changes","impacts"], "version": 1 },

  { "id": "oversight.review_coversheet.v1", "name": "Drafting Oversight Coversheet",
    "type": "cover", "format": "docx", "engine_owner": "E5",
    "jurisdiction": ["GLOBAL"],
    "source": "P22-drafting-oversight/assetarc-drafting-oversight/templates/review_coversheet.docx",
    "target": "eng-drafting/templates/review_coversheet.docx",
    "vars": ["matter","checklist","approver"], "version": 1 },
  { "id": "oversight.watermark_overlay.v1", "name": "Watermark Overlay",
    "type": "overlay", "format": "html", "engine_owner": "E8",
    "jurisdiction": ["GLOBAL"],
    "source": "P22-drafting-oversight/assetarc-drafting-oversight/templates/watermark_overlay.html",
    "target": "eng-drafting/templates/watermark_overlay.html",
    "vars": ["label","color","opacity"], "version": 1 },

  { "id": "ibc.moa.v1", "name": "Memorandum of Association (IBC)",
    "type": "moa", "format": "docx", "engine_owner": "E5",
    "jurisdiction": ["BVI","Belize","Mauritius","Seychelles","Cayman"],
    "source": "P23-ibc/assetarc-ibc/templates/moa.docx",
    "target": "eng-drafting/templates/ibc_moa.docx",
    "vars": ["company_name","share_capital","objects","registered_agent"], "version": 1 },
  { "id": "ibc.nominee_agreement.v1", "name": "Nominee Agreement (IBC)",
    "type": "agreement", "format": "docx", "engine_owner": "E5",
    "jurisdiction": ["BVI","Belize","Mauritius","Seychelles","Cayman"],
    "source": "P23-ibc/assetarc-ibc/templates/nominee_agreement.docx",
    "target": "eng-drafting/templates/ibc_nominee_agreement.docx",
    "vars": ["nominee","beneficial_owner","duties","indemnities"], "version": 1 },
  { "id": "ibc.kyc_checklist.v1", "name": "KYC Checklist (IBC)",
    "type": "checklist", "format": "html", "engine_owner": "E4",
    "jurisdiction": ["BVI","Belize","Mauritius","Seychelles","Cayman"],
    "source": "P23-ibc/assetarc-ibc/templates/kyc_checklist.html",
    "target": "eng-drafting/templates/ibc_kyc_checklist.html",
    "vars": ["items"], "version": 1 },

  { "id": "s42_47.compliance_checklist.za.v1", "name": "Compliance Checklist (Sec 42–47, ZA)",
    "type": "checklist", "format": "docx", "engine_owner": "E4",
    "jurisdiction": ["ZA"],
    "source": "P24-compliance-s42-s47/assetarc-compliance-s42-s47/templates/compliance_checklist.docx",
    "target": "eng-drafting/templates/s42_47_compliance_checklist.za.docx",
    "vars": ["transaction_type","requirements","signoffs"], "version": 1 },
  { "id": "s42_47.ruling_request.za.v1", "name": "SARS Ruling Request (ZA)",
    "type": "letter", "format": "docx", "engine_owner": "E4",
    "jurisdiction": ["ZA"],
    "source": "P24-compliance-s42-s47/assetarc-compliance-s42-s47/templates/ruling_request.docx",
    "target": "eng-drafting/templates/ruling_request.za.docx",
    "vars": ["taxpayer","facts","issues","law","ruling_sought"], "version": 1 },
  { "id": "s42_47.summary_report.v1", "name": "Transaction Summary Report",
    "type": "report", "format": "html", "engine_owner": "E4",
    "jurisdiction": ["ZA"],
    "source": "P24-compliance-s42-s47/assetarc-compliance-s42-s47/templates/summary_report.html",
    "target": "eng-drafting/templates/s42_47_summary_report.html",
    "vars": ["overview","risks","mitigations"], "version": 1 },

  { "id": "comparison.memo.v1", "name": "Structure Comparison Memo",
    "type": "memo", "format": "docx", "engine_owner": "E5",
    "jurisdiction": ["GLOBAL"],
    "source": "P25-structure-comparison/assetarc-structure-comparison/templates/comparison_memo.docx",
    "target": "eng-drafting/templates/comparison_memo.docx",
    "vars": ["options","criteria","scores","recommendation"], "version": 1 },
  { "id": "comparison.report.v1", "name": "Structure Comparison Report",
    "type": "report", "format": "html", "engine_owner": "E5",
    "jurisdiction": ["GLOBAL"],
    "source": "P25-structure-comparison/assetarc-structure-comparison/templates/comparison_report.html",
    "target": "eng-drafting/templates/comparison_report.html",
    "vars": ["tables","charts"], "version": 1 },

  { "id": "residency.plan_summary.v1", "name": "Residency Plan Summary",
    "type": "summary", "format": "docx", "engine_owner": "E5",
    "jurisdiction": ["GLOBAL"],
    "source": "P26-residency-planner/assetarc-residency-planner/templates/plan_summary.docx",
    "target": "eng-drafting/templates/residency_plan_summary.docx",
    "vars": ["jurisdictions","tax","steps","timeline"], "version": 1 },
  { "id": "residency.plan_report.v1", "name": "Residency Plan Report",
    "type": "report", "format": "html", "engine_owner": "E5",
    "jurisdiction": ["GLOBAL"],
    "source": "P26-residency-planner/assetarc-residency-planner/templates/plan_report.html",
    "target": "eng-drafting/templates/residency_plan_report.html",
    "vars": ["assumptions","comparisons","costs"], "version": 1 },

  { "id": "review.followup_letter.v1", "name": "Follow-up Letter",
    "type": "letter", "format": "docx", "engine_owner": "E6",
    "jurisdiction": ["GLOBAL"],
    "source": "P28-review-followup/assetarc-review-followup/templates/followup_letter.docx",
    "target": "eng-drafting/templates/followup_letter.docx",
    "vars": ["recipient","context","actions"], "version": 1 },
  { "id": "review.email_followup.v1", "name": "Email Follow-up",
    "type": "email", "format": "html", "engine_owner": "E6",
    "jurisdiction": ["GLOBAL"],
    "source": "P28-review-followup/assetarc-review-followup/templates/email_followup.html",
    "target": "eng-drafting/templates/email_followup.html",
    "vars": ["subject","body","cta_url"], "version": 1 },

  { "id": "leadmagnet.page.v1", "name": "Lead Magnet Page",
    "type": "page", "format": "html", "engine_owner": "E6",
    "jurisdiction": ["GLOBAL"],
    "source": "P29-leadmagnet/assetarc-leadmagnet/templates/leadmagnet.html",
    "target": "eng-drafting/templates/leadmagnet.html",
    "vars": ["headline","offer","form"], "version": 1 },

  { "id": "content.email_shell.v1", "name": "Email Shell",
    "type": "email", "format": "html", "engine_owner": "E6",
    "jurisdiction": ["GLOBAL"],
    "source": "P30-content/assetarc-content/templates/email_shell.html",
    "target": "eng-drafting/templates/email_shell.html",
    "vars": ["subject","intro","blocks"], "version": 1 },
  { "id": "content.blog_shell.v1", "name": "Blog Shell",
    "type": "blog", "format": "html", "engine_owner": "E6",
    "jurisdiction": ["GLOBAL"],
    "source": "P30-content/assetarc-content/templates/blog_shell.html",
    "target": "eng-drafting/templates/blog_shell.html",
    "vars": ["title","hero","sections"], "version": 1 },

  { "id": "education.certificate.v1", "name": "Course Certificate",
    "type": "certificate", "format": "docx", "engine_owner": "E6",
    "jurisdiction": ["GLOBAL"],
    "source": "P31-education/assetarc-education/templates/certificate.docx",
    "target": "eng-drafting/templates/certificate.docx",
    "vars": ["student","course","date"], "version": 1 },
  { "id": "education.syllabus.v1", "name": "Syllabus",
    "type": "syllabus", "format": "html", "engine_owner": "E6",
    "jurisdiction": ["GLOBAL"],
    "source": "P31-education/assetarc-education/templates/syllabus.html",
    "target": "eng-drafting/templates/syllabus.html",
    "vars": ["modules","duration"], "version": 1 },

  { "id": "mkt.sequence_step.v1", "name": "Sequence Step",
    "type": "email", "format": "html", "engine_owner": "E6",
    "jurisdiction": ["GLOBAL"],
    "source": "P32-marketing-automation/assetarc-marketing-automation/templates/sequence_step.html",
    "target": "eng-drafting/templates/sequence_step.html",
    "vars": ["step","subject","body"], "version": 1 },
  { "id": "mkt.welcome.v1", "name": "Welcome Email",
    "type": "email", "format": "html", "engine_owner": "E6",
    "jurisdiction": ["GLOBAL"],
    "source": "P32-marketing-automation/assetarc-marketing-automation/templates/welcome.html",
    "target": "eng-drafting/templates/welcome.html",
    "vars": ["recipient","cta_url"], "version": 1 },

  { "id": "healthcheck.audit_report.v1", "name": "Legal Audit Report",
    "type": "report", "format": "docx", "engine_owner": "E4",
    "jurisdiction": ["GLOBAL"],
    "source": "P34-legal-healthcheck/assetarc-legal-healthcheck/templates/audit_report.docx",
    "target": "eng-drafting/templates/legal_audit_report.docx",
    "vars": ["areas","risk_ratings","actions"], "version": 1 },
  { "id": "healthcheck.compliance_checklist.v1", "name": "Compliance Checklist",
    "type": "checklist", "format": "html", "engine_owner": "E4",
    "jurisdiction": ["GLOBAL"],
    "source": "P34-legal-healthcheck/assetarc-legal-healthcheck/templates/compliance_checklist.html",
    "target": "eng-drafting/templates/healthcheck_compliance_checklist.html",
    "vars": ["items"], "version": 1 },

  { "id": "annotation.advisor_notes_cover.v1", "name": "Advisor Notes Cover",
    "type": "cover", "format": "docx", "engine_owner": "E8",
    "jurisdiction": ["GLOBAL"],
    "source": "P35-doc-annotation/assetarc-doc-annotation/templates/advisor_notes_cover.docx",
    "target": "eng-drafting/templates/advisor_notes_cover.docx",
    "vars": ["client","matter","notes"], "version": 1 },
  { "id": "annotation.overlay.v1", "name": "Annotation Overlay",
    "type": "overlay", "format": "html", "engine_owner": "E8",
    "jurisdiction": ["GLOBAL"],
    "source": "P35-doc-annotation/assetarc-doc-annotation/templates/overlay.html",
    "target": "eng-drafting/templates/annotation_overlay.html",
    "vars": ["highlights","comments"], "version": 1 },

  { "id": "kpi.report.v1", "name": "Advisor KPI Report",
    "type": "report", "format": "html", "engine_owner": "E7",
    "jurisdiction": ["GLOBAL"],
    "source": "P36-advisor-kpi/assetarc-advisor-kpi/templates/kpi_report.html",
    "target": "eng-drafting/templates/kpi_report.html",
    "vars": ["metrics","period"], "version": 1 },

  { "id": "submission.checklist.v1", "name": "Submission Completeness Checklist",
    "type": "checklist", "format": "docx", "engine_owner": "E4",
    "jurisdiction": ["GLOBAL"],
    "source": "P37-submission-checker/assetarc-submission-checker/templates/completeness_checklist.docx",
    "target": "eng-drafting/templates/submission_checklist.docx",
    "vars": ["items","signoff"], "version": 1 },
  { "id": "submission.final_check.v1", "name": "Final Submission Check",
    "type": "report", "format": "html", "engine_owner": "E4",
    "jurisdiction": ["GLOBAL"],
    "source": "P37-submission-checker/assetarc-submission-checker/templates/final_check.html",
    "target": "eng-drafting/templates/final_submission_check.html",
    "vars": ["issues","fixes"], "version": 1 },

  { "id": "bbbee.affidavit.za.v1", "name": "B-BBEE Affidavit (ZA)",
    "type": "affidavit", "format": "docx", "engine_owner": "E4",
    "jurisdiction": ["ZA"],
    "source": "P38-bbbee/assetarc-bbbee/templates/bbbee_affidavit.docx",
    "target": "eng-drafting/templates/bbbee_affidavit.za.docx",
    "vars": ["company","turnover","black_ownership"], "version": 1 },
  { "id": "bbbee.verification_checklist.v1", "name": "B-BBEE Verification Checklist",
    "type": "checklist", "format": "html", "engine_owner": "E4",
    "jurisdiction": ["ZA"],
    "source": "P38-bbbee/assetarc-bbbee/templates/verification_checklist.html",
    "target": "eng-drafting/templates/bbbee_verification_checklist.html",
    "vars": ["requirements"], "version": 1 },

  { "id": "trustee.resolution.za.v1", "name": "Trustee Resolution (ZA)",
    "type": "resolution", "format": "docx", "engine_owner": "E5",
    "jurisdiction": ["ZA"],
    "source": "P39-trustee-services/assetarc-trustee-services/templates/trustee_resolution.docx",
    "target": "eng-drafting/templates/trustee_resolution.za.docx",
    "vars": ["trust","resolution","date"], "version": 1 },
  { "id": "trustee.minutes.za.v1", "name": "Trustee Minutes (ZA)",
    "type": "minutes", "format": "docx", "engine_owner": "E5",
    "jurisdiction": ["ZA"],
    "source": "P39-trustee-services/assetarc-trustee-services/templates/trustee_minutes.docx",
    "target": "eng-drafting/templates/trustee_minutes.za.docx",
    "vars": ["agenda","attendees","resolutions"], "version": 1 },
  { "id": "trustee.agenda.v1", "name": "Trustee Meeting Agenda",
    "type": "agenda", "format": "html", "engine_owner": "E5",
    "jurisdiction": ["GLOBAL"],
    "source": "P39-trustee-services/assetarc-trustee-services/templates/agenda.html",
    "target": "eng-drafting/templates/trustee_agenda.html",
    "vars": ["items","date"], "version": 1 },

  { "id": "newsletter.base.v1", "name": "Newsletter Base",
    "type": "email", "format": "html", "engine_owner": "E6",
    "jurisdiction": ["GLOBAL"],
    "source": "P40-newsletter-logic/assetarc-newsletter-logic/templates/newsletter_base.html",
    "target": "eng-drafting/templates/newsletter_base.html",
    "vars": ["subject","blocks"], "version": 1 },
  { "id": "newsletter.promo_block.v1", "name": "Newsletter Promo Block",
    "type": "email_block", "format": "html", "engine_owner": "E6",
    "jurisdiction": ["GLOBAL"],
    "source": "P40-newsletter-logic/assetarc-newsletter-logic/templates/promo_block.html",
    "target": "eng-drafting/templates/newsletter_promo_block.html",
    "vars": ["headline","cta_url"], "version": 1 },

  { "id": "utm.report.v1", "name": "UTM Report",
    "type": "report", "format": "html", "engine_owner": "E7",
    "jurisdiction": ["GLOBAL"],
    "source": "P41-utm-metrics/assetarc-utm-metrics/templates/utm_report.html",
    "target": "eng-drafting/templates/utm_report.html",
    "vars": ["campaigns","results"], "version": 1 },

  // === Suggested additions for complete IBC packs across jurisdictions ===
  { "id": "ibc.director_consent.v1", "name": "Director Consent (IBC)",
    "type": "consent", "format": "docx", "engine_owner": "E5",
    "jurisdiction": ["BVI","Belize","Mauritius","Seychelles","Cayman"],
    "target": "eng-drafting/templates/ibc_director_consent.docx",
    "vars": ["director","company","date"], "version": 1 },
  { "id": "ibc.registered_agent_agreement.v1", "name": "Registered Agent Agreement",
    "type": "agreement", "format": "docx", "engine_owner": "E5",
    "jurisdiction": ["BVI","Belize","Mauritius","Seychelles","Cayman"],
    "target": "eng-drafting/templates/ibc_registered_agent_agreement.docx",
    "vars": ["agent","fees","scope"], "version": 1 },
  { "id": "ibc.first_board_minutes.v1", "name": "First Board Minutes (IBC)",
    "type": "minutes", "format": "docx", "engine_owner": "E5",
    "jurisdiction": ["BVI","Belize","Mauritius","Seychelles","Cayman"],
    "target": "eng-drafting/templates/ibc_first_board_minutes.docx",
    "vars": ["directors","appointments","banking"], "version": 1 },
  { "id": "ibc.register_of_members.v1", "name": "Register of Members (IBC)",
    "type": "register", "format": "docx", "engine_owner": "E5",
    "jurisdiction": ["BVI","Belize","Mauritius","Seychelles","Cayman"],
    "target": "eng-drafting/templates/ibc_register_of_members.docx",
    "vars": ["members"], "version": 1 },
  { "id": "ibc.beneficial_ownership_decl.v1", "name": "Beneficial Ownership Declaration",
    "type": "declaration", "format": "docx", "engine_owner": "E4",
    "jurisdiction": ["BVI","Belize","Mauritius","Seychelles","Cayman"],
    "target": "eng-drafting/templates/ibc_beneficial_ownership_declaration.docx",
    "vars": ["ubo","percent","id_docs"], "version": 1 },
  { "id": "ibc.fatca_crs_self_cert.v1", "name": "FATCA/CRS Self-Certification",
    "type": "form", "format": "docx", "engine_owner": "E4",
    "jurisdiction": ["GLOBAL"],
    "target": "eng-drafting/templates/fatca_crs_self_cert.docx",
    "vars": ["entity_type","tin","residences"], "version": 1 },
  { "id": "ibc.apostille_request.v1", "name": "Apostille Request Letter",
    "type": "letter", "format": "docx", "engine_owner": "E8",
    "jurisdiction": ["GLOBAL"],
    "target": "eng-drafting/templates/apostille_request.docx",
    "vars": ["documents","destination_country"], "version": 1 }
]
Notes
* source points to current location; target is where to centralize in E2.
* For suggested additions we set only target. Store new files there.
* Add/edit variables (vars) as your renderers expect.

2) OpenAPI specs (one per engine)
Place these files under openapi/.
openapi/eng-identity.yml (E1)
openapi: 3.0.3
info:
  title: AssetArc – Identity & Access (E1)
  version: 1.0.0
servers:
  - url: https://auth.example.com
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
paths:
  /auth/request-otp:
    post:
      summary: Issue OTP to email
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email: { type: string, format: email }
      responses:
        '200': { description: OK }
  /auth/verify-otp:
    post:
      summary: Verify OTP and set cookies / return JWT
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email: { type: string }
                code: { type: string }
      responses:
        '200': { description: OK }
  /auth/refresh:
    post:
      summary: Rotate access token
      responses:
        '200': { description: OK }
  /auth/user:
    get:
      summary: Current user
      security: [ { bearerAuth: [] } ]
      responses:
        '200': { description: OK }
  /gateway/routes:
    get:
      summary: Service discovery for frontends
      responses:
        '200': { description: Routes map }
  /admin/users/{id}:
    patch:
      summary: Update user (role, activation)
      parameters:
        - in: path
          name: id
          required: true
          schema: { type: string }
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                role: { type: string, enum: [owner_admin, advisor, client] }
                is_active: { type: boolean }
      responses:
        '200': { description: Updated }
openapi/eng-drafting.yml (E2)
openapi: 3.0.3
info: { title: AssetArc – Knowledge & Drafting (E2), version: 1.0.0 }
servers: [ { url: https://drafting.example.com } ]
components:
  securitySchemes:
    bearerAuth: { type: http, scheme: bearer, bearerFormat: JWT }
paths:
  /llm/generate:
    post:
      summary: Generate text via model (free or skill)
      security: [ { bearerAuth: [] } ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                mode: { type: string, enum: [free, skill] }
                messages: { type: array, items: { type: object } }
                skill_id: { type: string }
                vars: { type: object }
      responses: { '200': { description: OK } }
  /doc/render:
    post:
      summary: Render single template to file
      security: [ { bearerAuth: [] } ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [ template_id, data ]
              properties:
                template_id: { type: string }
                data: { type: object }
                out_format: { type: string, enum: [docx, pdf, html] }
      responses: { '200': { description: File meta (id, url) } }
  /doc/pack:
    post:
      summary: Render multiple templates and zip
      security: [ { bearerAuth: [] } ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [ templates, data ]
              properties:
                templates: { type: array, items: { type: string } }
                data: { type: object }
      responses: { '200': { description: Zip meta } }
  /templates:
    get:
      summary: List templates (filtered by jurisdiction, type)
      parameters:
        - in: query
          name: jurisdiction
          schema: { type: string }
        - in: query
          name: type
          schema: { type: string }
      responses: { '200': { description: OK } }
openapi/eng-billing.yml (E3)
openapi: 3.0.3
info: { title: AssetArc – Pricing & Billing (E3), version: 1.0.0 }
servers: [ { url: https://billing.example.com } ]
components:
  securitySchemes:
    bearerAuth: { type: http, scheme: bearer, bearerFormat: JWT }
paths:
  /pricing/quote:
    post:
      summary: Quote with FX
      security: [ { bearerAuth: [] } ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [ base, target, amount ]
              properties:
                base: { type: string }
                target: { type: string }
                amount: { type: number }
      responses: { '200': { description: OK } }
  /pricing/lock:
    post:
      summary: Create 24h FX lock
      security: [ { bearerAuth: [] } ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [ base, target ]
              properties:
                base: { type: string }
                target: { type: string }
                amount: { type: number }
      responses: { '200': { description: Lock meta } }
  /checkout/session:
    post:
      summary: Create payment session
      security: [ { bearerAuth: [] } ]
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                items: { type: array, items: { type: object } }
                lock_id: { type: string }
      responses: { '200': { description: Pay URL } }
  /webhooks/{provider}:
    post:
      summary: Payment webhooks
      parameters:
        - in: path
          name: provider
          schema: { type: string }
          required: true
      responses: { '200': { description: OK } }
  /tokens/consume:
    post:
      summary: Consume usage token(s)
      security: [ { bearerAuth: [] } ]
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                amount: { type: integer }
      responses: { '200': { description: OK } }
openapi/eng-compliance.yml (E4)
openapi: 3.0.3
info: { title: AssetArc – Compliance & Quality (E4), version: 1.0.0 }
servers: [ { url: https://compliance.example.com } ]
components:
  securitySchemes:
    bearerAuth: { type: http, scheme: bearer, bearerFormat: JWT }
paths:
  /compliance/run:
    post:
      summary: Run module checklist (FICA, S42–47, Healthcheck, Submission)
      security: [ { bearerAuth: [] } ]
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required: [ module_id, inputs ]
              properties:
                module_id: { type: string }
                inputs: { type: object }
      responses: { '200': { description: Result + required documents } }
  /compliance/evidence/{case_id}:
    get:
      summary: Download evidence pack
      security: [ { bearerAuth: [] } ]
      parameters:
        - in: path
          name: case_id
          required: true
          schema: { type: string }
      responses: { '200': { description: Zip } }
openapi/eng-lifecycle.yml (E5)
openapi: 3.0.3
info: { title: AssetArc – Corporate Lifecycle (E5), version: 1.0.0 }
servers: [ { url: https://lifecycle.example.com } ]
components:
  securitySchemes:
    bearerAuth: { type: http, scheme: bearer, bearerFormat: JWT }
paths:
  /lifecycle/design:
    post:
      summary: Propose target structure & doc list
      security: [ { bearerAuth: [] } ]
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                goals: { type: array, items: { type: string } }
                jurisdiction: { type: string }
      responses: { '200': { description: Structure plan } }
  /lifecycle/pack:
    post:
      summary: Build and deliver a document pack
      security: [ { bearerAuth: [] } ]
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required: [ flow_id, templates, data ]
              properties:
                flow_id: { type: string }
                templates: { type: array, items: { type: string } }
                data: { type: object }
      responses: { '200': { description: Pack link } }
openapi/eng-engagement.yml (E6)
openapi: 3.0.3
info: { title: AssetArc – Client Engagement (E6), version: 1.0.0 }
servers: [ { url: https://engage.example.com } ]
components:
  securitySchemes:
    bearerAuth: { type: http, scheme: bearer, bearerFormat: JWT }
paths:
  /engage/sequence/start:
    post:
      summary: Start a drip/automation sequence
      security: [ { bearerAuth: [] } ]
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                sequence_id: { type: string }
                context: { type: object }
      responses: { '200': { description: OK } }
  /engage/email/send:
    post:
      summary: Send templated email
      security: [ { bearerAuth: [] } ]
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                template_id: { type: string }
                to: { type: string }
                data: { type: object }
      responses: { '200': { description: OK } }
  /engage/booking/slot:
    post:
      summary: Create booking slot (optionally gated by payment)
      security: [ { bearerAuth: [] } ]
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                when: { type: string, format: date-time }
                with: { type: string }
                price_lock: { type: string }
      responses: { '200': { description: Booking confirmed } }
openapi/eng-analytics.yml (E7)
openapi: 3.0.3
info: { title: AssetArc – Data & Insights (E7), version: 1.0.0 }
servers: [ { url: https://analytics.example.com } ]
components:
  securitySchemes:
    bearerAuth: { type: http, scheme: bearer, bearerFormat: JWT }
paths:
  /events/ingest:
    post:
      summary: Ingest events from services and clients
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses: { '200': { description: OK } }
  /analytics/kpi:
    get:
      summary: Advisor KPI snapshot
      security: [ { bearerAuth: [] } ]
      responses: { '200': { description: KPIs } }
openapi/eng-vault.yml (E8)
openapi: 3.0.3
info: { title: AssetArc – Storage & Delivery (E8), version: 1.0.0 }
servers: [ { url: https://vault.example.com } ]
components:
  securitySchemes:
    bearerAuth: { type: http, scheme: bearer, bearerFormat: JWT }
paths:
  /vault/upload:
    post:
      summary: Upload and register file
      security: [ { bearerAuth: [] } ]
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file: { type: string, format: binary }
                meta: { type: string }
      responses: { '200': { description: File id } }
  /vault/file/{id}:
    get:
      summary: Get signed URL for file
      security: [ { bearerAuth: [] } ]
      parameters:
        - in: path
          name: id
          required: true
          schema: { type: string }
      responses: { '200': { description: URL } }
  /vault/share-link:
    post:
      summary: Create a share link with policy (expiry, watermark)
      security: [ { bearerAuth: [] } ]
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                file_id: { type: string }
                expires_in: { type: integer }
                watermark: { type: string }
      responses: { '200': { description: Link } }
  /notes/annotate:
    post:
      summary: Attach advisor notes/annotations to a file
      security: [ { bearerAuth: [] } ]
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                file_id: { type: string }
                notes: { type: array, items: { type: object } }
      responses: { '200': { description: OK } }

3) Compose Overlay (labels only)
Create docker-compose.overlay.engines.yml and use it alongside your existing compose:
version: "3.9"
services:
  p01-auth:
    labels:
      com.assetarc.engine: "E1"
      com.assetarc.role: "identity"
  p06-gateway-full:
    labels:
      com.assetarc.engine: "E1"
      com.assetarc.role: "gateway"
  p11-admin:
    labels:
      com.assetarc.engine: "E1"
      com.assetarc.role: "admin"

  p02-llm:
    labels:
      com.assetarc.engine: "E2"
      com.assetarc.role: "drafting.llm"
  p10-docgen:
    labels:
      com.assetarc.engine: "E2"
      com.assetarc.role: "drafting.docgen"
  p14-doc-engine:
    labels:
      com.assetarc.engine: "E2"
      com.assetarc.role: "drafting.letters"

  p03-fx:
    labels:
      com.assetarc.engine: "E3"
      com.assetarc.role: "billing.fx"
  p07-payments:
    labels:
      com.assetarc.engine: "E3"
      com.assetarc.role: "billing.payments"
  p15-quote:
    labels:
      com.assetarc.engine: "E3"
      com.assetarc.role: "billing.quote"
  p17-subscriptions:
    labels:
      com.assetarc.engine: "E3"
      com.assetarc.role: "billing.subscriptions"

  p13-fica:
    labels:
      com.assetarc.engine: "E4"
      com.assetarc.role: "compliance.fica"
  p16-review:
    labels:
      com.assetarc.engine: "E4"
      com.assetarc.role: "compliance.review"
  p24-compliance-s42-s47:
    labels:
      com.assetarc.engine: "E4"
      com.assetarc.role: "compliance.s42_47"
  p34-legal-healthcheck:
    labels:
      com.assetarc.engine: "E4"
      com.assetarc.role: "compliance.healthcheck"
  p37-submission-checker:
    labels:
      com.assetarc.engine: "E4"
      com.assetarc.role: "compliance.submission"
  p38-bbbee:
    labels:
      com.assetarc.engine: "E4"
      com.assetarc.role: "compliance.bbbee"

  p18-company:
    labels:
      com.assetarc.engine: "E5"
      com.assetarc.role: "lifecycle.company"
  p19-trust:
    labels:
      com.assetarc.engine: "E5"
      com.assetarc.role: "lifecycle.trust"
  p20-structure:
    labels:
      com.assetarc.engine: "E5"
      com.assetarc.role: "lifecycle.design"
  p21-linking:
    labels:
      com.assetarc.engine: "E5"
      com.assetarc.role: "lifecycle.linking"
  p22-drafting-oversight:
    labels:
      com.assetarc.engine: "E5"
      com.assetarc.role: "lifecycle.oversight"
  p23-ibc:
    labels:
      com.assetarc.engine: "E5"
      com.assetarc.role: "lifecycle.ibc"
  p25-structure-comparison:
    labels:
      com.assetarc.engine: "E5"
      com.assetarc.role: "lifecycle.compare"
  p26-residency-planner:
    labels:
      com.assetarc.engine: "E5"
      com.assetarc.role: "lifecycle.residency"
  p39-trustee-services:
    labels:
      com.assetarc.engine: "E5"
      com.assetarc.role: "lifecycle.trustee"

  p29-leadmagnet:
    labels:
      com.assetarc.engine: "E6"
      com.assetarc.role: "engage.leadmagnet"
  p30-content:
    labels:
      com.assetarc.engine: "E6"
      com.assetarc.role: "engage.content"
  p31-education:
    labels:
      com.assetarc.engine: "E6"
      com.assetarc.role: "engage.education"
  p32-marketing-automation:
    labels:
      com.assetarc.engine: "E6"
      com.assetarc.role: "engage.automation"
  p40-newsletter-logic:
    labels:
      com.assetarc.engine: "E6"
      com.assetarc.role: "engage.newsletter"
  p28-review-followup:
    labels:
      com.assetarc.engine: "E6"
      com.assetarc.role: "engage.followup"
  p08-booking:
    labels:
      com.assetarc.engine: "E6"
      com.assetarc.role: "engage.booking"

  p12-analytics:
    labels:
      com.assetarc.engine: "E7"
      com.assetarc.role: "analytics.core"
  p36-advisor-kpi:
    labels:
      com.assetarc.engine: "E7"
      com.assetarc.role: "analytics.kpi"
  p41-utm-metrics:
    labels:
      com.assetarc.engine: "E7"
      com.assetarc.role: "analytics.utm"

  p04-vault:
    labels:
      com.assetarc.engine: "E8"
      com.assetarc.role: "vault.core"
  p27-vault-features:
    labels:
      com.assetarc.engine: "E8"
      com.assetarc.role: "vault.features"
  p33-filemgmt:
    labels:
      com.assetarc.engine: "E8"
      com.assetarc.role: "vault.filemgmt"
  p35-doc-annotation:
    labels:
      com.assetarc.engine: "E8"
      com.assetarc.role: "vault.annotation"
Run with overlay (no rebuild):
docker compose -f docker-compose.integrated.yml -f docker-compose.overlay.engines.yml up -d --no-recreate
# Verify labels
docker ps --format '{{.Names}}' | xargs -I {} docker inspect --format '{{ index .Config.Labels "com.assetarc.engine"}} {{ index .Config.Labels "com.assetarc.role"}} -> {}' {}

4) Apply steps
1. Commit the files above to a feature branch (e.g., feat/engines-bootstrap).
2. Do not change runtime yet. Use the overlay only to tag services.
3. Start centralizing templates by copying files from source ? target paths listed in templates.json.
4. Update P18/P19/P23/etc to call E2 /doc/render instead of reading templates locally (behind a feature flag).
5. Route all file writes through **E8 /vault/*` and replace direct disk usage.
6. Begin emitting events to E7 /events/ingest from each service.
7. Once stable, prune duplicate endpoints (invoice, resolutions, checklists) now covered by E2/E3/E4/E8.

Optional helper script – validate template presence
Create scripts/validate_templates.py to ensure all target files exist before enabling central render.
import json, os, sys
with open('eng-drafting/templates/templates.json') as f:
    items=json.load(f)
missing=[i for i in items if i.get('target') and not os.path.exists(i['target'])]
if missing:
    print('Missing targets:')
    for m in missing:
        print('-', m['id'], '->', m['target'])
    sys.exit(1)
print('All template targets present.')

That’s it. This gives your team:
* A single source of truth for templates (E2),
* Clear service contracts (OpenAPI), and
* A non-disruptive label overlay to manage the migration while the current P## stack keeps running.
All set — I dropped a full Engine Refactor Pack into the canvas with:
* A centralized templates index (including the extra IBC jurisdictions and missing documents).
* Minimal-but-usable OpenAPI specs for E1–E8.
* A docker-compose overlay that tags every running P## service with its engine (no rebuild, no downtime).
* Clear apply steps and a small validation script.
Open the canvas titled “AssetArc – Engine Refactor Pack (Templates Index, OpenAPI specs, Compose Overlay)” and copy the files straight into your repo.

