
# Example Nginx vhost: update server_name and upstream port per service
server {
    listen 443 ssl http2;
    server_name auth.asset-arc.com;

    ssl_certificate     /etc/letsencrypt/live/auth.asset-arc.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/auth.asset-arc.com/privkey.pem;

    location / {
        proxy_pass http://127.0.0.1:5001;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}


# --- White-Labeling Server Block ---
# This server block handles requests for white-labeled client portals.
#
# PREREQUISITES:
# 1. You must have a wildcard DNS record set up for your domain.
#    For example, an A record for `*.asset-arc.com` pointing to this server's IP address.
# 2. You must have a wildcard SSL certificate for `*.asset-arc.com`.
#
server {
    listen 443 ssl http2;
    # This server_name uses a regular expression to capture the subdomain part.
    # e.g., for "acme-advisors.asset-arc.com", $brand_id will be "acme-advisors".
    server_name ~^(?<brand_id>.+)\.asset-arc\.com$;

    ssl_certificate     /etc/letsencrypt/live/asset-arc.com/fullchain.pem; # Path to your WILDCARD cert
    ssl_certificate_key /etc/letsencrypt/live/asset-arc.com/privkey.pem; # Path to your WILDCARD key

    location / {
        # This is the crucial part for white-labeling.
        # It passes the captured subdomain to the upstream WordPress application
        # as a custom HTTP header.
        proxy_set_header X-AssetArc-Brand-ID $brand_id;

        # Standard proxy settings
        proxy_pass http://127.0.0.1:8080; # Assuming WordPress is running on port 8080
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}
